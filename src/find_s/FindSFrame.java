/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package find_s;

import java.awt.Dimension;
import java.awt.Toolkit;
import find_s.Find_s;

/**
 *
 * @author IrfanS
 */
public class FindSFrame extends javax.swing.JFrame {

    Find_s find_s;

    /**
     * Creates new form FindSFrame
     */
    public FindSFrame() {
        initComponents();

        Dimension layar = Toolkit.getDefaultToolkit().getScreenSize();
        int x = layar.width / 2 - this.getSize().width / 2;
        int y = layar.height / 2 - this.getSize().height / 2;
        this.setLocation(x, y);
        this.setTitle("Muhammad Irfan Shiddiq | 2110181046");
        lb_title.setText("Find-S by IrfanS");

        find_s = new Find_s();
        find_s.run();
        lb_hipotesisYes.setText(String.join(" , ", find_s.getHipotesis_yes()) + "Yes");
        lb_HipotesisNo.setText(String.join(" , ", find_s.getHipotesis_no()) + "No");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_sky = new javax.swing.JTextField();
        tf_airtemp = new javax.swing.JTextField();
        tf_humidity = new javax.swing.JTextField();
        tf_wind = new javax.swing.JTextField();
        tf_water = new javax.swing.JTextField();
        tf_forecast = new javax.swing.JTextField();
        btn_submit = new javax.swing.JButton();
        lb_result = new javax.swing.JLabel();
        lb_title = new javax.swing.JLabel();
        lb_hipotesisYes = new javax.swing.JLabel();
        lb_HipotesisNo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tf_sky.setText("sky");

        tf_airtemp.setText("airtemp");

        tf_humidity.setText("humidity");

        tf_wind.setText("wind");

        tf_water.setText("water");

        tf_forecast.setText("forecast");

        btn_submit.setText("Submit");
        btn_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_submitActionPerformed(evt);
            }
        });

        lb_result.setText("result");

        lb_title.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        lb_title.setText("title");

        lb_hipotesisYes.setText("YesHip");

        lb_HipotesisNo.setText("NoHip");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_HipotesisNo)
                    .addComponent(lb_hipotesisYes)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tf_sky, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tf_airtemp, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_humidity, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_result)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tf_wind, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tf_water, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_forecast, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(lb_title))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_hipotesisYes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_HipotesisNo)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_sky, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_wind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_airtemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_humidity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_water, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_forecast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_submit)
                    .addComponent(lb_result))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_submitActionPerformed
        // TODO add your handling code here:
        if (hipotesisYes()) {
            if (hipotesisNo()) {
                lb_result.setText("Mungkin");
            } else {
                lb_result.setText("Ya");
            }
        } else {
            if (hipotesisNo()) {
                lb_result.setText("Tidak");
            } else {
                lb_result.setText("Tidak diketahui");
            }
        }
    }//GEN-LAST:event_btn_submitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FindSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FindSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FindSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FindSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FindSFrame().setVisible(true);
            }
        });
    }

    public boolean hipotesisYes() {
        String data[] = find_s.getHipotesis_yes();
        boolean result = true;

        if (!data[0].equalsIgnoreCase("?")) {
            if (!data[0].equalsIgnoreCase(tf_sky.getText())) {
                result = false;
            }
        }
        if (!data[1].equalsIgnoreCase("?")) {
            if (!data[1].equalsIgnoreCase(tf_airtemp.getText())) {
                result = false;
            }
        }
        if (!data[2].equalsIgnoreCase("?")) {
            if (!data[2].equalsIgnoreCase(tf_humidity.getText())) {
                result = false;
            }
        }
        if (!data[3].equalsIgnoreCase("?")) {
            if (!data[3].equalsIgnoreCase(tf_wind.getText())) {
                result = false;
            }
        }
        if (!data[4].equalsIgnoreCase("?")) {
            if (!data[4].equalsIgnoreCase(tf_water.getText())) {
                result = false;
            }
        }
        if (!data[5].equalsIgnoreCase("?")) {
            if (!data[5].equalsIgnoreCase(tf_forecast.getText())) {
                result = false;
            }
        }
        return result;
    }

    public boolean hipotesisNo() {
        String data[] = find_s.getHipotesis_no();
        boolean result = true;

        if (!data[0].equalsIgnoreCase("?")) {
            if (!data[0].equalsIgnoreCase(tf_sky.getText())) {
                result = false;
            }
        }
        if (!data[1].equalsIgnoreCase("?")) {
            if (!data[1].equalsIgnoreCase(tf_airtemp.getText())) {
                result = false;
            }
        }
        if (!data[2].equalsIgnoreCase("?")) {
            if (!data[2].equalsIgnoreCase(tf_humidity.getText())) {
                result = false;
            }
        }
        if (!data[3].equalsIgnoreCase("?")) {
            if (!data[3].equalsIgnoreCase(tf_wind.getText())) {
                result = false;
            }
        }
        if (!data[4].equalsIgnoreCase("?")) {
            if (!data[4].equalsIgnoreCase(tf_water.getText())) {
                result = false;
            }
        }
        if (!data[5].equalsIgnoreCase("?")) {
            if (!data[5].equalsIgnoreCase(tf_forecast.getText())) {
                result = false;
            }
        }
        return result;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_submit;
    private javax.swing.JLabel lb_HipotesisNo;
    private javax.swing.JLabel lb_hipotesisYes;
    private javax.swing.JLabel lb_result;
    private javax.swing.JLabel lb_title;
    private javax.swing.JTextField tf_airtemp;
    private javax.swing.JTextField tf_forecast;
    private javax.swing.JTextField tf_humidity;
    private javax.swing.JTextField tf_sky;
    private javax.swing.JTextField tf_water;
    private javax.swing.JTextField tf_wind;
    // End of variables declaration//GEN-END:variables
}
